"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.computeRefKey = computeRefKey;
exports.parsePositionsAndRewards = parsePositionsAndRewards;
exports.sleep = sleep;
exports.timestampToDate = timestampToDate;
exports.timeToMaturity = timeToMaturity;
exports.calculateTtlRewards = calculateTtlRewards;
exports.computeUnclaimedRewards = computeUnclaimedRewards;
const ethers_1 = require("ethers");
const types_1 = require("./types");
function computeRefKey(ref) {
    return (0, ethers_1.keccak256)((0, ethers_1.toUtf8Bytes)(ref));
}
function parsePositionsAndRewards(input) {
    return {
        positions: input[0].map(items => {
            return {
                period: Number(items[0].toString()),
                start: Number(items[1].toString()),
                maturity: Number(items[2].toString()),
                locked: Number(items[3].toString()),
                claimed: Number(items[4].toString()),
            };
        }),
        staked: Number(input[1].toString()),
        totalRewards: Number(input[2].toString()),
        claimed: Number(input[3].toString()),
    };
}
function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}
function timestampToDate(ts) {
    return (new Date(ts * 1000)).toISOString();
}
function timeToMaturity(ts) {
    const _now = Math.floor(Date.now() / 1000);
    const left = ts - _now;
    return {
        days: Math.floor(left / (24 * 3600)),
        hours: Math.floor((left % (24 * 3600)) / 3600),
        minutes: Math.floor((left % 3600) / 60),
        seconds: left % 60
    };
}
function calculateTtlRewards(locked, period) {
    if (locked === 0n)
        return 0;
    return Number(locked
        * BigInt(types_1.PeriodInSec[period])
        * BigInt(types_1.Terms[period])
        / BigInt(types_1.PeriodInSec[3])
        / 10000n);
}
function computeUnclaimedRewards(locked, period, claimed, start) {
    const ttlRewards = BigInt(calculateTtlRewards(locked, period));
    const _now = Date.now();
    const startMilliseconds = BigInt(start) * 1000n;
    const elapsed = BigInt(_now) - startMilliseconds;
    const maturity = startMilliseconds + BigInt(types_1.PeriodInSec[period]) * 1000n;
    let available = maturity > _now
        ? ttlRewards
        : ttlRewards * elapsed / BigInt(types_1.PeriodInSec[period]);
    return Number(available > claimed ? available - claimed : 0n);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJQSxzQ0FFQztBQUVELDREQW9CQztBQUVELHNCQUVDO0FBRUQsMENBRUM7QUFFRCx3Q0FVQztBQUVELGtEQVFDO0FBRUQsMERBZUM7QUEzRUQsbUNBQWdEO0FBRWhELG1DQUFnRjtBQUVoRixTQUFnQixhQUFhLENBQUMsR0FBVztJQUN2QyxPQUFPLElBQUEsa0JBQVMsRUFBQyxJQUFBLG9CQUFXLEVBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNyQyxDQUFDO0FBRUQsU0FBZ0Isd0JBQXdCLENBQUMsS0FLeEM7SUFDQyxPQUFPO1FBQ0wsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDOUIsT0FBTztnQkFDTCxNQUFNLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDbkMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ2xDLFFBQVEsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUNyQyxNQUFNLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDbkMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7YUFDeEIsQ0FBQTtRQUNoQixDQUFDLENBQUM7UUFDRixNQUFNLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuQyxZQUFZLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxR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