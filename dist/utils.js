"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.computeRefKey = computeRefKey;
exports.parsePositionsAndRewards = parsePositionsAndRewards;
exports.parseMetrics = parseMetrics;
exports.sleep = sleep;
exports.timestampToDate = timestampToDate;
exports.timeToMaturity = timeToMaturity;
exports.calculateTtlRewards = calculateTtlRewards;
exports.computeUnclaimedRewards = computeUnclaimedRewards;
const ethers_1 = require("ethers");
const types_1 = require("./types");
function computeRefKey(ref) {
    return (0, ethers_1.keccak256)((0, ethers_1.toUtf8Bytes)(ref));
}
function parsePositionsAndRewards(input) {
    return {
        positions: input[0].map(items => {
            return {
                period: Number(items[0].toString()),
                start: Number(items[1].toString()),
                maturity: Number(items[2].toString()),
                locked: Number(items[3].toString()),
                claimed: Number(items[4].toString()),
                unclaimed: Number(items[5].toString()),
            };
        }),
        staked: Number(input[1].toString()),
        totalRewards: Number(input[2].toString()),
        claimed: Number(input[3].toString()),
    };
}
function parseMetrics(input) {
    if (input) {
        return {
            locked: Number(input[0].toString()),
            rewards: Number(input[1].toString()),
            claimed: Number(input[2].toString()),
            delta: Number(input[3].toString()),
        };
    }
    return;
}
function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}
function timestampToDate(ts) {
    return (new Date(ts * 1000)).toISOString();
}
function timeToMaturity(ts) {
    const _now = Math.floor(Date.now() / 1000);
    const left = ts - _now;
    return {
        days: Math.floor(left / (24 * 3600)),
        hours: Math.floor((left % (24 * 3600)) / 3600),
        minutes: Math.floor((left % 3600) / 60),
        seconds: left % 60
    };
}
function calculateTtlRewards(locked, period) {
    if (locked === 0n)
        return 0;
    return Number(BigInt(locked)
        * BigInt(types_1.PeriodInSec[period])
        * BigInt(types_1.Terms[period])
        / BigInt(types_1.PeriodInSec[3])
        / 10000n);
}
function computeUnclaimedRewards(locked, period, claimed, start) {
    const ttlRewards = BigInt(calculateTtlRewards(locked, period));
    const _now = Date.now();
    const startMilliseconds = BigInt(start) * 1000n;
    const elapsed = BigInt(_now) - startMilliseconds;
    const maturity = startMilliseconds + BigInt(types_1.PeriodInSec[period]) * 1000n;
    let available = maturity > _now
        ? ttlRewards
        : ttlRewards * elapsed / BigInt(types_1.PeriodInSec[period]);
    return Number(available > BigInt(claimed) ? available - BigInt(claimed) : 0n);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJQSxzQ0FFQztBQUVELDREQXFCQztBQUVELG9DQVVDO0FBRUQsc0JBRUM7QUFFRCwwQ0FFQztBQUVELHdDQVVDO0FBRUQsa0RBUUM7QUFFRCwwREFlQztBQXhGRCxtQ0FBOEQ7QUFFOUQsbUNBQTBGO0FBRTFGLFNBQWdCLGFBQWEsQ0FBQyxHQUFXO0lBQ3ZDLE9BQU8sSUFBQSxrQkFBUyxFQUFDLElBQUEsb0JBQVcsRUFBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3JDLENBQUM7QUFFRCxTQUFnQix3QkFBd0IsQ0FBQyxLQUt4QztJQUNDLE9BQU87UUFDTCxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUM5QixPQUFPO2dCQUNMLE1BQU0sRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUNuQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDbEMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ3JDLE1BQU0sRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUNuQyxPQUFPLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDcEMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7YUFDMUIsQ0FBQTtRQUNoQixDQUFDLENBQUM7UUFDRixNQUFNLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFD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